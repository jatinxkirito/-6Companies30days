class Solution {
    void dfs(int i,int j, vector<vector<int>> &grid,vector<vector<int>> &vis,int n,int m,int &f,int &cnt)
    {
        if(i<0||j<0||i>=n||j>=m)
        {
            f=1;
            return;
        }
        if(vis[i][j])
        return;
        if(grid[i][j])
        return;
        ++cnt;
        vis[i][j]=1;
        dfs(i+1,j,grid,vis,n,m,f,cnt);
        dfs(i-1,j,grid,vis,n,m,f,cnt);
        dfs(i,j+1,grid,vis,n,m,f,cnt);
        dfs(i,j-1,grid,vis,n,m,f,cnt);
    }
public:
    int closedIsland(vector<vector<int>>& grid) {
        vector<vector<int>> vis(grid.size(),vector<int>(grid[0].size()));
        int n=grid.size();
        int m=grid[0].size();
        int ans=0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                 if(vis[i][j])
                 continue;
                 int cnt=0;
                 int f=0;
                 dfs(i,j,grid,vis,n,m,f,cnt);
                 if(!f&&cnt>0)
                 ++ans;
            }
        }
        return ans;
    }
};
