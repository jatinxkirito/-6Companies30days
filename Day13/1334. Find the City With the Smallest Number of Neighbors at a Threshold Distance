class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int d ){
        vector<vector<int>> g(n,vector<int>(n,1e9+7));
        for(int i=0;i<n;i++)
        g[i][i]=0;
        for(auto i: edges)
        {
            g[i[0]][i[1]]=i[2];
            g[i[1]][i[0]]=i[2];
        }
        for(int k=0;k<n;k++)
        {
            for(int i=0;i<n;i++)
            {
                for(int j=0;j<n;j++)
                {
                    if(g[i][k]!=1e9+7&&g[k][j]!=1e9+7)
                    g[i][j]=min(g[i][j],g[i][k]+g[k][j]);
                }
            }
        }
        int ma=1e9,cnt=1e9;
        // for(int i=0;i<n;i++)
        // {
        //     for(int j=0;j<n;j++)
        //     cout<<g[i][j]<<" ";
        //     cout<<endl;
        // }
        for(int i=0;i<n;i++)
        {
            int ct=0;
            for(int j=0;j<n;j++)
            {
                if(i==j)
                continue;
                if(g[i][j]<=d)
                ++ct;
            }
            if(ct<=cnt)
            {ma=i;cnt=ct;}

        }
        return ma;
    }
};
